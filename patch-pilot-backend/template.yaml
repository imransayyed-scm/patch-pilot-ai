AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  patch-pilot-backend

Globals:
  Function:
    Timeout: 60
    MemorySize: 256
    Runtime: python3.11

Parameters:
  LlmApiKey:
    Type: String
    Description: The API Key for the LLM (Gemini or OpenAI)
    NoEcho: true

Resources:
  FindingsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"

  GetFindingsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/get_findings/
      Handler: app.lambda_handler
      Environment:
        Variables:
          TABLE_NAME: !Ref FindingsTable
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref FindingsTable
        - Statement:
            - Effect: Allow
              Action:
                - inspector2:ListFindings
              Resource: '*'
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /findings
            Method: get
            RestApiId: !Ref ApiGateway

  AnalyzeFindingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/analyze_finding/
      Handler: app.lambda_handler
      Environment:
        Variables:
          TABLE_NAME: !Ref FindingsTable
          LLM_API_KEY: !Ref LlmApiKey
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref FindingsTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /findings/{findingId}/analyze
            Method: post
            RestApiId: !Ref ApiGateway

  DeployFixFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/deploy_fix/
      Handler: app.lambda_handler
      Environment:
        Variables:
          TABLE_NAME: !Ref FindingsTable
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref FindingsTable
        - Statement:
          - Effect: Allow
            Action:
              - ssm:SendCommand
            Resource: '*'
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /findings/{findingId}/deploy
            Method: post
            RestApiId: !Ref ApiGateway

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
